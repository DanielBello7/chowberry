services:
  admin:
    build:
      context: .
      dockerfile: ./apps/admin/Dockerfile
    container_name: chowberry-admin
    command: ["node", "dist/apps/admin/main"]
    depends_on:
      - mongo
      - replica
      - rabbit
    environment:
      - ENV_FILE=envs/admin/.env.pro
      - LOG_PATH=logs/admin
    volumes:
      - ./envs:/app/envs
      - ./logs:/app/logs
    ports:
      - '3000:3000'

  auth:
    build:
      context: .
      dockerfile: ./apps/auth/Dockerfile
    container_name: chowberry-auth
    command: ["node", "dist/apps/auth/main"]
    depends_on:
      - mongo
      - replica
      - rabbit
    environment:
      - ENV_FILE=envs/auth/.env.pro
      - LOG_PATH=logs/auth
    volumes:
      - ./envs:/app/envs
      - ./logs:/app/logs
    ports:
      - '3001:3001'

  chowberry:
    build:
      context: .
      dockerfile: ./apps/chowberry/Dockerfile
    container_name: chowberry-chowberry
    command: ["node", "dist/apps/chowberry/main"]
    depends_on:
      - mongo
      - replica
      - rabbit
    environment:
      - ENV_FILE=envs/chowberry/.env.pro
      - LOG_PATH=logs/chowberry
    volumes:
      - ./envs:/app/envs
      - ./logs:/app/logs
    ports:
      - '3002:3002'

  finance:
    build:
      context: .
      dockerfile: ./apps/finance/Dockerfile
    container_name: chowberry-finance
    command: ["node", "dist/apps/finance/main"]
    depends_on:
      - mongo
      - replica
      - rabbit
    environment:
      - ENV_FILE=envs/finance/.env.pro
      - LOG_PATH=logs/finance
    volumes:
      - ./envs:/app/envs
      - ./logs:/app/logs
    ports:
      - '3003:3003'

  puddle:
    build:
      context: .
      dockerfile: ./apps/puddle/Dockerfile
    container_name: chowberry-puddle
    command: ["node", "dist/apps/puddle/main"]
    depends_on:
      - mongo
      - replica
      - rabbit
    environment:
      - ENV_FILE=envs/puddle/.env.pro
      - LOG_PATH=logs/puddle
    volumes:
      - ./envs:/app/envs
      - ./logs:/app/logs
    ports:
      - '3004:3004'
  
  support:
    build:
      context: .
      dockerfile: ./apps/support/Dockerfile
    container_name: chowberry-support
    command: ["node", "dist/apps/support/main"]
    depends_on:
      - mongo
      - replica
      - rabbit
    environment:
      - ENV_FILE=envs/support/.env.pro
      - LOG_PATH=logs/support
    volumes:
      - ./envs:/app/envs
      - ./logs:/app/logs
    ports:
      - '3005:3005'

  users:
    build:
      context: .
      dockerfile: ./apps/users/Dockerfile
    container_name: chowberry-users
    command: ["node", "dist/apps/users/main"]
    depends_on:
      - mongo
      - replica
      - rabbit
    environment:
      - ENV_FILE=envs/users/.env.pro
      - LOG_PATH=logs/users
    volumes:
      - ./envs:/app/envs
      - ./logs:/app/logs
    ports:
      - '3006:3006'

  postgres:
    image: postgres:latest
    restart: always
    ports:
      - '5431:5432'
    environment:
      POSTGRES_USER: myuser
      POSTGRES_PASSWORD: mypassword
      POSTGRES_DB: redis

  rabbit:
    image: rabbitmq:3.13.7-alpine
    container_name: rabbit
    platform: linux/arm64
    ports:
      - '5672:5672'
  
  redis:
    image: redis:latest
    restart: always
    ports:
      - '6379:6379'
